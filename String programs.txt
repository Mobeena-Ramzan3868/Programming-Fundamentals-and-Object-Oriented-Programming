Charachter replace
#include <string>
#include <iostream>
using namespace std;

int main() {
	string test;
	test = "I am Q the passimist";
	cout << test.length() << endl;
	char ch = test[5]; // ch is 'Q'
	test[9] = '3'; // we correct misspelling of omnipotent
	cout << test << endl;
	cout << "ch = " << ch << endl;
	system("pause");
	return 0;
}
Break
#include <string>
#include <iostream>
using namespace std;

int main() {
	string myName = "Ayesha";
	while (true) {
		cout << "Enter your name (or 'quit' to exit): ";
		string userName;
		cin >> userName;
		if (userName == "Asma") {
			cout << "Hi, Asma! Welcome back!" << endl;
		}
		else if (userName == "quit") {
			// user is sick of entering names, so let's quit
			cout << endl;
			break;
		}
		else if (userName != myName) {
			// user did not enter quit, Julie, or Neal
			cout << "Hello, " << userName << endl;
		}
		else {
			cout << "Oh, it’s you, " << myName << endl;
		}
	}
	system("pause");
	return 0;
Search within string
#include <string>
#include <iostream>
using namespace std;

int main() {
	string sentence = "Yes, we went home after we left the class.";
	int firstWe = sentence.find("we"); // finds the first "we"
	int secondWe = sentence.find("we", firstWe+1); // finds "we" in "went"
	int thirdWe = sentence.find("we", secondWe+1); // finds the last "we"
	int gPos = sentence.find('G');
	int zPos = sentence.find('Z'); // returns string::npos
	cout << "First we: " << firstWe << endl;
	cout << "Second we: " << secondWe << endl;
	cout << "Third we: " << thirdWe << endl;
	cout << "Is G there? ";
	cout << (gPos != string::npos ? "Yes!" : "No!") << endl;
	cout << "Is Z there? ";
	cout << (zPos != string::npos ? "Yes!" : "No!") << endl;
	system("pause");
	return 0;
}
#include <string> 
#include <iostream> 
using namespace std;

int main()
{
	// Take any string 
	string s1 = "Geeks";

	// Copy three characters of s1 (starting  
	// from position 1) 
	string r = s1.substr(1, 3);

	// prints the result 
	cout << "String is: " << r;
	system("pause");
	return 0;
}
/*How to get sub - string after a character ?
In this a string and a character is given and you have to print the sub - string followed by the given character.
Extract everything after the “ : ” in the string “dog : cat”.
filter_none
edit
play_arrow

brightness_4
// CPP program to illustrate substr() */
#include <string> 
#include <iostream> 
using namespace std;

int main()
{
	// Take any string 
	string s = "dog:cat";

	// Find position of ':' using find() 
	int pos = s.find(":");

	// Copy substring after pos 
	string sub = s.substr(pos + 1);

	// prints the result 
	cout << "String is: " << sub;
	system("pause");
	return 0;
}
String extraction
#include <string>
#include <iostream>
using namespace std;

int main() {
	string oldSentence;
	oldSentence = "The quick brown fox jumped WAY over the lazy dog";
	int len = oldSentence.length();
	cout << "Original sentence: " << oldSentence << endl;
	int found = oldSentence.find("WAY ");
	string newSentence = oldSentence.substr(0, found);
	cout << "Modified sentence: " << newSentence << endl;
	newSentence += oldSentence.substr(found + 4);
	cout << "Completed sentence: " << newSentence << endl;
	system("pause");
	return 0;
}
#include <string>
#include <iostream>
using namespace std;

int main() {
	string oldSentence;
	oldSentence = "The quick brown fox jumped WAY over the lazy dog";
	int len = oldSentence.length();
	cout << "Original sentence: " << oldSentence << endl;
	int found = oldSentence.find("WAY ");
	string newSentence = oldSentence.substr(0, found);
	cout << "Modified sentence: " << newSentence << endl;
	newSentence += oldSentence.substr(found + 5);
	cout << "Completed sentence: " << newSentence << endl;
	system("pause");
	return 0;
}